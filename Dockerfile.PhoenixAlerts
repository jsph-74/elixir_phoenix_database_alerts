# Modern Elixir + Phoenix
FROM elixir:1.17

WORKDIR /app

# Install system dependencies in one layer
RUN apt-get update && apt-get install -y \
    build-essential \
    postgresql-client \
    default-libmysqlclient-dev \
    unixodbc \
    odbcinst \
    odbc-mariadb \
    odbc-postgresql \
    inotify-tools \
    openssl \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Configure ODBC for MariaDB/MySQL and PostgreSQL (auto-detect architecture)
RUN ARCH=$(dpkg --print-architecture) && \
    echo "[MariaDB]\nDescription = MariaDB ODBC Driver\nDriver = /usr/lib/${ARCH}-linux-gnu/odbc/libmaodbc.so\nFileUsage = 1" >> /etc/odbcinst.ini && \
    echo "[PostgreSQL Unicode]\nDescription = PostgreSQL ODBC driver (Unicode version)\nDriver = /usr/lib/${ARCH}-linux-gnu/odbc/psqlodbcw.so\nSetup = /usr/lib/${ARCH}-linux-gnu/odbc/libodbcpsqlS.so\nFileUsage = 1" >> /etc/odbcinst.ini

# Create directories for non-root user
RUN mkdir -p /nonexistent/.mix /nonexistent/.hex /nonexistent/.cache \
    && chown -R 65534:65534 /nonexistent

# Copy application files as root first
COPY ./alerts /app

# Create SSL directories for all environments and fix ownership
RUN mkdir -p /app/priv/ssl/dev /app/priv/ssl/test /app/priv/ssl/prod && \
    chown -R 65534:65534 /app

# Switch to non-root user and install Elixir tools
USER 65534
RUN mix local.hex --force && mix local.rebar --force

# Install dependencies and compile them
RUN mix deps.get && mix deps.compile

# Ports are configured dynamically per environment in docker-compose.yaml

# Start the application
ENTRYPOINT ["/app/bin/boot.sh"]